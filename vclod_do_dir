#! /bin/ksh
# Launches all VCLOD batches defined in a directory, running up to VCLOD_JOBS at a time. One of the primary ways of
# launching VCLOD batches.
#
# Usage:
# ./vclod_do_dir /path/to/dir
#

[ -z "$VCLOD_BASE_DIR" ] && . "$(dirname "$(readlink -f "$(which "$0")")")/vclod_loadenv"

# Argument validation
: "${VCLOD_BASE_DIR:?}" "${1:?Missing a directory or file to process}"
: "${VCLOD_JOBS:=10}" # How many sripts to run in parallel
: "${OPERATIONS_EMAIL:?}" # Email address list to send error output to
[ -d "$VCLOD_BASE_DIR" ] || { echo VCLOD_BASE_DIR must be an existing directory; exit; }
[ -d "$LOG_BASE_DIR" ] || { echo LOG_BASE_DIR must be an existing directory; exit; }
# NOTE: Below comment is for LOG_BASE_DIR auto_docs; MAIL_ELF is used to send batched errors
MAIL_ELF="${LOG_BASE_DIR:?}/$$.err" # Where to store log files (will also store error output)
export MAIL_ELF
[ -s "$MAIL_ELF" ] && : >"$MAIL_ELF" # force it to start empty

if [ -e "$1" ]; then
  find "$@" ! -empty -xtype f -regextype posix-egrep -regex "$VCLOD_FILE_REGEX" | sort | xargs -n1 -r -P"$VCLOD_JOBS" "${VCLOD_BASE_DIR%/}/vclod_run_script"
else
  . "${VCLOD_BASE_DIR%/}/vclod_run_script" 
fi
ret=$?
[ -s "$MAIL_ELF" ] && [ "$IS_TERMINAL" -eq 0 ] && mail -s "Script error digest on $(hostname)" "$OPERATIONS_EMAIL" <"$MAIL_ELF"
exit $ret
