#FLOW Keep running stdin with the given operation until it returns a non-zero exit code (and optionally stops producing output)
: "${WHILE_EXT_OPERATION:=${ext_opt:-sh}}" # what vclod_operation to use to process stdin
: "${WHILE_EXT_REQUIRE_OUTPUT:=0}" # if true, operation must return something to stdout to continue running
: "${WHILE_EXT_STOP:=0}" # if 1, stop after we finish the current loop. You can set this on the fly in the config, as it is reloaded every loop.
TEMP_FILE="$(mktemp)"; add_file_cleanup "$TEMP_FILE"
cat >"$TEMP_FILE"

if [ "$WHILE_EXT_REQUIRE_OUTPUT" == "0" ] ; then
  while ( vclod_op "while_$base_filename.$WHILE_EXT_OPERATION" <"$TEMP_FILE" ) || return 0 ; do
    vclod_load_local_config ; [ "$WHILE_EXT_STOP" == 1 ] && return 42 
  done # force a 0 exit status to continue
else
  while { { { {
      ( vclod_op "while_$base_filename.$WHILE_EXT_OPERATION" <"$TEMP_FILE"; ) ; 
      printf '%d' "$?" >&3;
    } | stdbuf -i0 -o0 -e0 grep . >&4; printf '%d\n' "$?" >&3; } 3>&1; } | ( read xs; return $xs; ) } 4>&1 ; do  
   vclod_load_local_config ; [ "$WHILE_EXT_STOP" == 1 ] && return 42 
 done # force both a 0 exit status and log data to continue
fi
