cd "$(dirname "$(readlink -f "$(which "$0")")")"

CODE_FILES='vclod* extensions/* connections/*'  # NOTE: connections doesnt have any variables yet. Need to update the awk if I am going to force that. 
exclusions=$(grep -E '^[A-Z_]+=' $CODE_FILES | sed 's/^[^:]*://;s/=/ /' | awk '{r=$1".*"$1; if($0 !~ r) print "-e"$1;}' | sort| uniq | paste -sd' ')

cat << EOF >docs/Configuration.md
Scope | Used by: 
------|----------
Global | the whole directory. Only Editable in the Global config file
Script | a single script
Extension | the given dot extensions
Post Process | the after action script defined in \`\$LOG_POST_PROCESS\`

NOTE: Setting the variable in the config file must be of the form \`VAR_NAME=...\` otherwise it will not be exported. Enviornment Variables given on the command line will be overridden by config files unless the variable is defined in the form \`VAR_NAME=\${VAR_NAME:=value to set}\` (or left to the default). 

Here is an automated listing of all Enviornment Variables, their Scopes and Default Values. \`\$INPUT_DIR\` is the Local directory of the script.
Variable | Scope | Defaults
---------|-------|---------
$(grep -onE '\$\{[A-Z_]+:[?=-]' $CODE_FILES | sed 's/[${:=?-]/ /g' | grep -vw $exclusions | awk '{printf $0" "} /^vclod/ {print 1 + !($1 == "vclod" || $1 == "vclod_do_dir") + 2*($1 ~ /^vclod_pp_/)} /^extension/ {print "3"}' | sort -k3,4 | while read f n v s ; do sed -n "${n}p" "$f" | grep -oE '\$\{'"$v"':[?=-]([$][{][^{]+}|[/$0-9A-Za-z_-]+)*}' | sed -r "s|^[\$][{]${v}:[?=-]||;s/[}]$//;s|^|${f#*/} $v $s |" ; done | awk '
function concat_ws(value, sep, new) {return (value=="") ? new : value sep new} 
function tail() {ret=""; for (i=4; i<=NF; i++) ret=concat_ws(ret," ",$i); return ret} 
function s() {if(l==1) return "Global"; if(l==2) return "Script"; if(l==3) return "Extensions: "e; return "Post Process"}
BEGIN {cur="";l=0;e=""} 
$2==cur && l==3 {e=e" "$1} 
$2==cur && l==$3 && tail()!=d {print "WARNING: inconsistent definitions for "cur >"/dev/stderr"}
$2!=cur {print cur"|"s()"|"d;cur=$2;l=$3;d=tail();e=""}
END {print cur"|"s()"|"d}')
EOF

#commit -m"$@"
